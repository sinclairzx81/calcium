var calcium;
(function (calcium) {
    calcium.web = require('calcium.web');
    calcium.template = require('calcium.template');
    calcium.logging = require('calcium.logging');
    calcium.storage = require('calcium.storage');
})(calcium || (calcium = {}));
var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var calcium;
(function (calcium) {
    (function (editor) {
        (function (routers) {
            var Editor = (function (_super) {
                __extends(Editor, _super);
                function Editor() {
                    var _this = this;
                    _super.call(this);

                    this.get('/', function (context) {
                        _this.index(context);
                    });
                }
                Editor.prototype.index = function (context) {
                    calcium.template.storage = context.storage;

                    calcium.template.render('/views/index.html', null, function (content) {
                        context.response.writeHead(200, { 'content-type': 'text/html' });

                        context.response.end(content);
                    });
                };
                return Editor;
            })(calcium.web.Router);
            routers.Editor = Editor;
        })(editor.routers || (editor.routers = {}));
        var routers = editor.routers;
    })(calcium.editor || (calcium.editor = {}));
    var editor = calcium.editor;
})(calcium || (calcium = {}));
var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var calcium;
(function (calcium) {
    (function (editor) {
        (function (routers) {
            var Storage = (function (_super) {
                __extends(Storage, _super);
                function Storage() {
                    var _this = this;
                    _super.call(this);

                    this.get('/storage/[path]', function (context) {
                        _this.index(context);
                    });
                }
                Storage.prototype.index = function (context) {
                    var path = '/' + context.parameters.path;

                    if (calcium.storage.util.Path.IsFile(path)) {
                        context.storage.readstream(path, function (readstream) {
                            if (!readstream) {
                                context.response.writeHead(404, { 'content-type': 'text/plain' });

                                context.response.end("route not found");

                                return;
                            }

                            var mime = calcium.storage.util.Mime.fromfilename(path);

                            context.response.writeHead(200, { 'content-type': mime });

                            readstream.pipe(context.response);
                        });

                        return;
                    } else {
                        context.storage.readfolder(path, function (objects) {
                            var json = JSON.stringify(objects, null, ' ');

                            context.response.writeHead(200, { 'content-type': 'application/json' });

                            context.response.end(json);
                        });
                    }
                };
                return Storage;
            })(calcium.web.Router);
            routers.Storage = Storage;
        })(editor.routers || (editor.routers = {}));
        var routers = editor.routers;
    })(calcium.editor || (calcium.editor = {}));
    var editor = calcium.editor;
})(calcium || (calcium = {}));
var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var calcium;
(function (calcium) {
    (function (editor) {
        var App = (function (_super) {
            __extends(App, _super);
            function App(storage) {
                _super.call(this);

                var mount = new calcium.storage.mount.Device();

                mount.push("storage", storage);

                mount.push("static", new calcium.storage.local.Device({ basepath: __dirname + "/static" }));

                mount.push("views", new calcium.storage.local.Device({ basepath: __dirname + "/views" }));

                this.storage = mount;

                this.routers.push(new calcium.editor.routers.Editor());

                this.routers.push(new calcium.editor.routers.Storage());
            }
            return App;
        })(calcium.web.App);
        editor.App = App;
    })(calcium.editor || (calcium.editor = {}));
    var editor = calcium.editor;
})(calcium || (calcium = {}));
exports = calcium.editor;
module.exports = exports;