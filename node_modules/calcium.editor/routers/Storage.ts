/// <reference path="../decl/references.ts" />

module calcium.editor.routers 
{
    export class Storage extends calcium.web.Router 
    {
        constructor()  
        { 
            super();
            
            this.get('/storage/[path]', (context) => { this.index(context);  });
        }
        
        public index(context:calcium.web.Context) : void {
            
            var path = '/' + context.parameters.path;
            
            if(calcium.storage.util.Path.IsFile(path)) 
            {
                context.storage.readstream(path, (readstream) => {
                
                    if(!readstream) {
                        
                        context.response.writeHead(404, {'content-type' : 'text/plain'});

                        context.response.end("route not found");  

                        return;
                    }

                    var mime = storage.util.Mime.fromfilename(path);

                    context.response.writeHead(200, {'content-type' : mime});

                    readstream.pipe(context.response);
                });

                return;
            } 
            else // its likely a directory.
            {
                context.storage.readfolder(path, (objects) => {
                    
                    var json = JSON.stringify(objects, null, ' ');

                    context.response.writeHead(200, {'content-type' : 'application/json'});

                    context.response.end(json);     
                });
            }
        }
    }
}