/// <reference path="../decl/references.ts" />
/// <reference path="../util/Path.ts" />
/// <reference path="../Device.ts" />
/// <reference path="Connection.ts" />
/// <reference path="Client.ts" />

module calcium.storage.ftp
{   
    export class Device implements calcium.storage.IDevice
    {
        private connection    : calcium.storage.ftp.Connection;

        private logger        : calcium.logging.ILogger;

        constructor(connection:calcium.storage.ftp.Connection, logger?:calcium.logging.ILogger)
        {
            this.connection = connection;

            this.logger     = logger;

            if(!this.logger) {
            
                this.logger = new calcium.logging.NullLogger();
            }
        }
        
        public exists (path:string, callback:{(exists:boolean) : void; }):  void  {

            var device_path = calcium.storage.util.Path.Join([this.connection.basepath, path]);

            var parent_path = calcium.storage.util.Path.Parent(device_path);

            var filename    = calcium.storage.util.Path.Name(device_path);

            var client      = this.getclient();

            client.connect(() => {
            
                client.login(() => {
                    
                    client.command("CWD " + parent_path, (response)=> {
                       
                        client.command("MDTM " + filename, (repsonse)=> {

                            client.disconnect(() => { callback(repsonse.code == 213); });

                        });
                    });
                });
            });
        }

        public createfolder (path:string, callback:{(success:boolean) : void; }): void  {

            var device_path = calcium.storage.util.Path.Join([this.connection.basepath, path]);

            var parent_path = calcium.storage.util.Path.Parent(device_path);

            var foldername  = calcium.storage.util.Path.Name(device_path);

            var client      = this.getclient();

            client.connect(() => {
            
                client.login( () => {
                    
                    client.command("CWD " + parent_path, () => {
                       
                        client.command("MDTM " + foldername, (response)=> {
                             
                            if(response.code == 213) { 
                                 
                               client.disconnect(()=> {
                                
                                     callback (true);
                               });                                    

                               return;
                            }

                            client.command("MKD " + foldername, (response) => {
                               
                                var success = response.code == 257;

                                client.disconnect(()=> { callback (success); }); 
                            });
                        });
                    });
                });
            });
        }

        public delete (path:string, callback:{(success:boolean) : void; }): void  {

            var device_path = calcium.storage.util.Path.Join([this.connection.basepath, path]);

            var parent_path = calcium.storage.util.Path.Parent(device_path);

            var name  = calcium.storage.util.Path.Name(device_path);

            var client = this.getclient();

            client.connect(() => 
            {
                client.login(() => 
                {
                    client.command("CWD " + parent_path, () => 
                    {
                        client.command("DELE " + name, (response) => 
					    {
                            if(response.code != 550) {
                            
                                client.disconnect( () => { callback(true) });	    
                                
                                return;                            
                            }      
                            
							client.command("RMD " + name, (response) => 
							{		
								client.disconnect( ()=> { callback(response.code != 550) });	
							});		
                        });
                    });
                });
            });
        }

        public readfolder (path:string, callback:{ ( objects : calcium.storage.DeviceObject[] ):void; } ): void  
        {
            var device_path = calcium.storage.util.Path.Join([this.connection.basepath, path]);

            var parent_path = calcium.storage.util.Path.Parent(device_path);

            var foldername  = calcium.storage.util.Path.Name(device_path);

            var client      = this.getclient();

            client.connect(() => 
            {
                client.login(() => 
                {
                    client.command("CWD " + device_path, (response) => 
                    {
                        if(response.code == 550) 
                        {    
                            client.disconnect(()=>{ callback ([]); });

                            return;
                        }
                        
                        client.command("PASV", (response) =>  
                        {
                             client.passive(response, (stream) => 
                             {
                                client.command("LIST", (response) =>  
                                { 
                                      client.wait((response) => // wait for 226 Transfer OK
                                      { 
                                          this.getstreamdata(stream, (data) => 
                                          {
                                                stream.destroy();
                                            
                                                client.disconnect(()=>
                                                {
                                                    var device_objects = this.readdeviceobjects( path, data );
                                                    
                                                    callback(device_objects);
                                                });
                                          });
                                      });
						         });
                             });
                         });
                    });
                });
            });
        }

        public readstream  (path:string, callback:{(stream:any):void;}): void 
        {
            var device_path = calcium.storage.util.Path.Join([this.connection.basepath, path]);

            var parent_path = calcium.storage.util.Path.Parent(device_path);

            var name  = calcium.storage.util.Path.Name(device_path);

            var client      = this.getclient();

           client.connect(() => 
            {
                client.login(() => 
                {
                    client.command("CWD " + parent_path, (response) => 
                    {
                        if(response.code == 550) 
                        {    
                            client.disconnect(()=>{ callback (null); });

                            return;
                        }
                        
                        client.command("PASV", (response) =>  
                        {
                             client.passive(response, (stream) => 
                             {
                                client.command("RETR " + name, (response) =>  
                                {     
                                      if(response.code == 550)
                                      {
                                            client.disconnect(() => { callback(null); });                                            
                
                                            return;
                                      }

                                      callback(stream); // send stream back to be read.

                                      client.wait((response) => // wait for 226 Transfer OK
                                      { 
                                            client.disconnect(()=>
                                            {
                                                
                                            });
                                      });
						         });
                             });
                         });
                    });
                });
            });
        }

        public writestream (path:string, callback:{(stream:any):void;}): void {

            var device_path = calcium.storage.util.Path.Join([this.connection.basepath, path]);

            var parent_path = calcium.storage.util.Path.Parent(device_path);

            var name = calcium.storage.util.Path.Name(device_path);

            var client = this.getclient();

           client.connect(() => 
            {
                client.login(() => 
                {
                    client.command("CWD " + parent_path, (response) => 
                    {
                        if(response.code == 550) 
                        {    
                            client.disconnect(()=>{ callback (null); });

                            return;
                        }
                        
                        client.command("PASV", (response) =>  
                        {
                             client.passive(response, (stream) => 
                             {
                                client.command("STOR " + name, (response) =>  
                                {    
                                      callback(stream); // send stream back to be written.

                                      client.wait((response) => // wait for 226 Transfer Complete
                                      { 
                                            client.disconnect(() =>
                                            {
                                                 
                                            });
                                      });
						         });
                             });
                         });
                    });
                });
            });
        }

        ///////////////////////////////////////////
        // Privates
        ///////////////////////////////////////////

        private getclient(): calcium.storage.ftp.Client 
        {
            var credential = new calcium.storage.ftp.Credential(this.connection.user, this.connection.pass);

            var endpoint   = new calcium.storage.ftp.EndPoint(this.connection.host, this.connection.port);
        
            var client     = new calcium.storage.ftp.Client(endpoint, credential, this.logger);
            
            return client;
        }

        private getstreamdata(stream:stream.ReadableStream, callback:{(data:string):void;}) : void 
        {
            var buffer = [];
            
            stream.on('data', function(chunk){
            
                buffer.push(chunk);
                
            });
            
            stream.on('end', () => 
            {
                callback(buffer.join(''));
            });

        }

        private readdeviceobjects(path:string, data:string) : calcium.storage.DeviceObject [] {
        
            var accumulator = [];

            var lines = data.split('\r\n');

            for(var n in lines) {

                var line = lines[n];

                var obj = this.readdeviceobject(path, line);

                if(obj) 
                {
                    accumulator.push(obj);
                }
            }

            return accumulator;
        }

        private readdeviceobject(path:string, line:string) : calcium.storage.DeviceObject {

            var device_object = new calcium.storage.DeviceObject();

            var split = line.split(' ');

            // note: porting from .net here. string.Split with remove empty js version.

            var accumulator = [];

            for(var n in split) {

                var trim = split[n].trim();

                if(trim.length > 0) 
                {
                    accumulator.push(trim);
                }
            }

            split = accumulator;

            // windows
            if (split.length == 4)
            {
                
                // folder
                if (line.indexOf("<DIR>") != -1)
                {
                    device_object.type     = "folder";
                    
                    device_object.fullpath = calcium.storage.util.Path.Join([path, split[split.length - 1]]);

                    device_object.name     = calcium.storage.util.Path.Name(device_object.fullpath)

                    device_object.size     = 0;

                    return device_object;
                }
                // file
                else
                {
                    device_object.type     = "file";
                    
                    device_object.fullpath = calcium.storage.util.Path.Join([path, split[split.length - 1]]);

                    device_object.name     = calcium.storage.util.Path.Name(device_object.fullpath)

                    device_object.size     = 0;

                    device_object.mime     = calcium.storage.util.Mime.fromfilename(device_object.name);

                    return device_object;
                }
            }
            
            // unix
            if (split.length == 9)
            {
                // folder
                if (line[0] == 'd')
                {

                    device_object.type     = "folder";
                    
                    device_object.fullpath = calcium.storage.util.Path.Join([path, split[split.length - 1]]);

                    device_object.name     = calcium.storage.util.Path.Name(device_object.fullpath)

                    device_object.size     = 0;

                    return device_object;
                }
                // file
                else
                {
                    device_object.type     = "file";
                    
                    device_object.fullpath = calcium.storage.util.Path.Join([path, split[split.length - 1]]);

                    device_object.name     = calcium.storage.util.Path.Name(device_object.fullpath)

                    device_object.size     = 0;

                    device_object.mime     = calcium.storage.util.Mime.fromfilename(device_object.name);

                    return device_object;
                }
            }
            return null;
        }
        
    }
}