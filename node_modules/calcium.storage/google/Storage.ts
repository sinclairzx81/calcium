/// <reference path="../decl/node.d.ts" />
/// <reference path="../Storage.ts" />
/// <reference path="Connection.ts" />

module calcium.storage.google
{
    export class Storage implements calcium.storage.Storage
    {
        private connection:calcium.storage.google.Connection;

        constructor(connection:calcium.storage.google.Connection)
        {
            this.connection = connection;
        }

        public exists (path:string, callback:(exists:boolean) => void ): void 
        {
            console.log('not implemented');       
        }

        public createfolder (path:string, callback:(success:boolean) => void): void 
        {
             console.log('not implemented');   
        }

        public delete (path:string, callback:{(success:boolean) : void; }): void 
        {
             console.log('not implemented');  
        }

        public readfolder (path:string, callback:( objects : calcium.storage.StorageObject[] ) => void): void  
        {
            console.log('not implemented');    
        }

        public readstream           (path:string, callback:(stream:any) =>void): void 
        {
            console.log('not implemented');    
        }

        public writestream          (path:string, callback:(stream:any) => void): void 
        {
            console.log('not implemented');    
        }
    }
}