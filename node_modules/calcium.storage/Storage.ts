/// <reference path="decl/node.d.ts" />

module calcium.storage
{ 
    export class StorageObject
    {
        /// <summary>
        /// The type of this file or folder. (file, folder, device, unknown)
        /// </summary>
        public type:string;
        
       /// <summary>
        /// The full path of this file or folder.
        /// </summary>
        public fullpath:string;

        /// <summary>
        /// The name of this file or folder.
        /// </summary>
        public name:string;

        /// <summary>
        /// The mime type of this file or folder. 
        /// </summary>
        public mime:string;

        /// <summary>
        /// A publically accessible URL to this file or folder (if available)
        /// </summary>
        public url:string;

        /// <summary>
        /// The timestamp associated with this file or folder if available.
        /// </summary>
        public timestamp:Date;

        /// <summary>
        /// The size of this file in bytes. If a folder, then will be 0.
        /// </summary>
        public size:number;

        /// <summary>
        /// Any meta information associated with this file or folder.
        /// </summary>
        public metadata:any;
    }

    export interface Storage
    {
        exists               (path:string, callback:(exists:boolean) => void):  void;

        createfolder         (path:string, callback:(success:boolean) => void): void;

        readfolder           (path:string, callback:(objects:calcium.storage.StorageObject[] ) => void ): void;

        delete               (path:string, callback:(success:boolean) => void): void;

        readstream           (path:string, callback:(stream:stream.ReadableStream) => void): void;

        writestream          (path:string, callback:(stream:stream.WritableStream) => void): void;
    }
}   

