{
  "name": "awssum-amazon-s3",
  "description": "AwsSum plugin for Amazon Simple Storage Service (S3).",
  "version": "1.2.4",
  "main": "awssum-amazon-s3.js",
  "engines": {
    "node": ">= 0.6.0"
  },
  "peerDependencies": {
    "awssum-amazon": "1.x.x"
  },
  "dependencies": {
    "data2xml": "0.8.x",
    "underscore": "1.4.x",
    "dateformat": "1.0.4-1.2.3"
  },
  "devDependencies": {
    "fmt": "0.4.x",
    "tap": "0.4.x"
  },
  "scripts": {
    "test": "tap test/*.js test/integration/*.js"
  },
  "homepage": "https://awssum.io/",
  "repository": {
    "type": "git",
    "url": "git://github.com/awssum/awssum-amazon-s3.git"
  },
  "bugs": {
    "url": "http://github.com/awssum/awssum-amazon-s3/issues"
  },
  "author": {
    "name": "Andrew Chilton",
    "email": "andychilton@gmail.com",
    "url": "http://chilts.org/"
  },
  "contributors": [],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/awssum/awssum-amazon-s3/raw/master/LICENSE"
    }
  ],
  "keywords": [
    "awssum",
    "awssum-plugin",
    "amazon",
    "aws",
    "webapi",
    "api",
    "s3"
  ],
  "readme": "# awssum-amazon-s3 #\n\nThis is an ```AwsSum``` plugin!\n\nYou'll need to add [awssum-amazon-s3](https://github.com/awssum/awssum-amazon-s3/) to your package.json\ndependencies. Both [awssum](https://github.com/awssum/awssum/) and\n[awssum-amazon](https://github.com/awssum/awssum-amazon/) are pulled in as peer dependencies.\n\n## Example ##\n\nList all your buckets:\n\n```\nvar fmt = require('fmt');\nvar amazonS3 = require('awssum-amazon-s3');\n\nvar s3 = new amazonS3.S3({\n    'accessKeyId'     : process.env.ACCESS_KEY_ID,\n    'secretAccessKey' : process.env.SECRET_ACCESS_KEY,\n    'region'          : amazonS3.US_EAST_1\n});\n\ns3.ListBuckets(function(err, data) {\n    fmt.dump(err, 'err');\n    fmt.dump(data, 'data');\n});\n```\n\n## Streaming ##\n\nStreaming uploads:\n\n```\nvar fmt = require('fmt');\nvar amazonS3 = require('awssum-amazon-s3');\n\nvar s3 = new amazonS3.S3({\n    'accessKeyId'     : process.env.ACCESS_KEY_ID,\n    'secretAccessKey' : process.env.SECRET_ACCESS_KEY,\n    'region'          : amazonS3.US_EAST_1\n});\n\n// you must run fs.stat to get the file size for the content-length header (s3 requires this)\nfs.stat(__filename, function(err, file_info) {\n    var bodyStream = fs.createReadStream( __filename );\n\n    var options = {\n        BucketName    : bucket,\n        ObjectName    : 'amazon.js',\n        ContentLength : file_info.size,\n        Body          : bodyStream\n    };\n\n    s3.PutObject(options, function(err, data) {\n        fmt.dump(err, 'err');\n        fmt.dump(data, 'data');\n    });\n});\n```\n\nStreaming downloads:\n\n```\nvar fmt = require('fmt');\nvar amazonS3 = require('awssum-amazon-s3');\n\nvar s3 = new amazonS3.S3({\n    'accessKeyId'     : process.env.ACCESS_KEY_ID,\n    'secretAccessKey' : process.env.SECRET_ACCESS_KEY,\n    'region'          : amazonS3.US_EAST_1\n});\n\nvar options = {\n    BucketName    : 'pie-17',\n    ObjectName    : 'javascript-file.js',\n};\n\ns3.GetObject(options, { stream : true }, function(err, data) {\n    fmt.dump(err, 'err');\n    fmt.dump(data, 'data');\n\n    // stream this file to stdout\n    fmt.sep();\n    fmt.title('The File');\n    data.Stream.pipe(process.stdout);\n    data.Stream.on('end', function() {\n        fmt.sep();\n    });\n});\n```\n\n## Operations ##\n\n(Ends)\n",
  "readmeFilename": "README.md",
  "_id": "awssum-amazon-s3@1.2.4",
  "_from": "awssum-amazon-s3@"
}
