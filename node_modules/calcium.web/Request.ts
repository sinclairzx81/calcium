/// <reference path="decl/node.d.ts" />
/// <reference path="Response.ts" />

module calcium.web
{
    var _http  = <http>require('http');

    var _https = <https>require('https');

    var _url   = <url>require('url');
    
    export class Request  
    {
        public host     : string;
        
        public hostname : string;
        
        public port     : number;
        
        public auth     : string;
        
        public path     : string;
        
        public method   : string;
        
        public headers  : any;
        
        public agent    : string;
        
        public protocol : string;
        
        public query    : string;
        
        public hash     : string;

        public postdata : string;

        constructor(url:string) {
       
            var options   = _url.parse(url);

            this.protocol  = options.protocol;

            this.host      = options.host;

            this.hostname  = options.hostname;

            this.port      = options.port ? parseInt(options.port) : 80;

            this.method    = "GET";

            this.path      = options.pathname;

            this.auth      = options.auth;

            this.query     = options.query;
            
            this.hash      = options.hash;

            this.headers   = {};

            this.postdata  = null;
        }

        public get(callback:{(response:calcium.web.Response) : void;}) : void 
        {
            this.method = "GET";

            this.request(callback);
        
        }

        public post(postdata:string, callback:{(response:calcium.web.Response) : void;}) : void 
        {
            this.method = "POST";

            this.postdata = postdata;
            
            this.request(callback);
        }
        
        public delete(postdata:string, callback:{(response:calcium.web.Response) : void;}) : void 
        {
            this.method = "DELETE";

            this.postdata = postdata;

            this.request(callback);
        }

        public put (postdata:string, callback:{(response:calcium.web.Response) : void;}) : void 
        {
            this.method = "PUT";

            this.postdata = postdata;

            this.request(callback);
        }
        
        private request(callback:{(response:calcium.web.Response) : void;}): void {
        
            var options = 
            {
                host     : this.host,
                
                hostname : this.hostname,
                
                port     : this.port,
                
                method   : this.method,
                
                path     : [this.path, this.query].join(''),
                
                auth     : this.auth,

                headers  : this.headers
            };
            
            var _request:Function = _http.request;

            if(this.protocol == "https") 
            {
                _request = _https.request;
            }
            
            var request = _request(options, (response:http.ClientResponse) => { 

                calcium.web.Response.from_response(response, (response) => {
                    
                    callback(response);
                })
            });

            if(this.method == "GET") 
            {    
                request.end();
            } 
            else 
            {
                if(this.postdata)
                {
                    request.write(this.postdata);

                    request.end();
                }
            }
        }
    }
}