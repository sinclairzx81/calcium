/// <reference path="Context.ts" />
/// <reference path="Route.ts" />

module calcium.web 
{
    export class Router 
	{
        public routes: calcium.web.Route[];

		constructor() 
        {
			this.routes = [];
		}

        public match(method:string, path:string): calcium.web.Route 
        {
            for(var n in this.routes) 
            {
                if(this.routes[n].method == method) 
                {
                    if(this.routes[n].match(path)) 
                    {
                        return this.routes[n];
                    }
                }
            }
            return null;  
        }

		public get(path:string,  callback:{(context:calcium.web.Context) : void;}) : void 
        {
			this.routes.push(new calcium.web.Route(path, "GET", callback));
		}

		public post(path:string,  callback:{(context:calcium.web.Context) : void;}) : void 
        {
			this.routes.push(new calcium.web.Route(path, "POST", callback));
		}

		public put(path:string,  callback:{(context:calcium.web.Context) : void;}) : void 
        {
			this.routes.push(new calcium.web.Route(path, "PUT", callback));
		}

		public delete(path:string,  callback:{(context:calcium.web.Context) : void;}) : void 
        {
			this.routes.push(new calcium.web.Route(path, "DELETE", callback));
		}

		public options(path:string,  callback:{(context:calcium.web.Context) : void;}) : void 
        {
			this.routes.push(new calcium.web.Route(path, "OPTIONS", callback));
		}
	}
}