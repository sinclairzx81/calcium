/// <reference path="decl/references.ts" />
/// <reference path="Route.ts" />
/// <reference path="Router.ts" />
/// <reference path="Context.ts" />

module calcium.web 
{
    var _fs      = <fs>require('fs');

    var _http    = <http>require('http');
    
    var _path    = <path>require('path');
    
    export class App
    {
        public server      : http.Server;
        
        public routers     : calcium.web.Router[];

        constructor() 
        {    
            this.server     = _http.createServer((request, response) => { this.handler(request, response); });

            this.routers    = [];
        }
        
        public listen(port:number): void 
        {
            this.server.listen(port);
        }
        
        private locate_route(request:http.ServerRequest): calcium.web.Route {
        
            for(var n in this.routers)
            {
                 var route = this.routers[n].match(request.method.toUpperCase(), request.url);
                 
                 if(route) 
                 {
                    return route;
                 }
            }

            return null;
        }
        
        private handler(request:http.ServerRequest, response:http.ServerResponse) : void 
        {   
            var route = this.locate_route(request);
            
            if(route) 
            {
                var context = new calcium.web.Context();

                context.server     = this.server;

                context.routers    = this.routers;

                context.request    = request;

                context.response   = response;
                
                context.route      = route;

                context.parameter  = route.parameter(request.url);
                
                route.callback( context );
                
                return;   
            }

            this.error(404, request, response);
        }

        public error(code:number, request:http.ServerRequest, response:http.ServerResponse) : void 
        {    
            response.writeHead(code, {'content-type' : 'text/plain'});

            response.write('route not found');

            response.end();    
        }
    }
}
